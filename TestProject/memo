演算子

計算時に使用する「+」や
代入する際に使用する「＝」
等の記号を演算子と言う。

「b = a + 3」の事を式
「a」「3」 の演算の対象になる部分を
オペランドと呼ぶ。

オペランドは「数値」「文字列」「変数」も含む。

インクリメント・デクリメント演算子

数値型の変数の値に1増加する演算子を
インクリメント演算子。
1減少する演算子をデクリメント演算子と呼ぶ。

前置きと後置き
インクリメント・デクリメントには、演算子を前につける前置と後ろにつける後置があります。どちらの場合でもインクリメント演算子は１増加させ、デクリメント演算子は１減少させることに違いは無し。
前置と後置で処理が変わってくる場合が有り。

int a;
int c;

a = 5;
c = ++a;  // a をインクリメントした後に、a が c に代入される
// それぞれの値は、a が「6」で c も「6」

a = 5;
c = a++;  // a を c に代入した後に、a がインクリメントされる
// それぞれの値は、a が「6」で c が「5」


関係（比較）演算子

関係演算子とは、2つの値が大きいか、小さいか、等しいかを調べる場合に使用。
結果は「boolean」型になります。関係演算子は以下

<	小なり	a < b	    [a が b より小さい場合に true]
<=	小なりイコール	[a <= b	   a が b より小さいか等しい場合に true]
>	大なり	a > b	    [a が b より大きい場合に true]
>=	大なりイコール	[a >= b	 a が b より大きいか等しい場合に true]
==	等価	a == b	  [a と b が等しい場合に true]
!=	不等価	a != b	[a と b が等しくない場合に true]


 例
 int a = 5;
boolean c;

c = a < 5;   // c = false
c = a <= 5;  // c = true
c = a > 4;   // c = true
c = a >= 6;  // c = false
c = a == 5;  // c = true
c = a != 5;  // c = false


論理演算子
複数の式を条件とする場合に使用。結果は「boolean」型になります。論理演算子は以下。

&&	論理積（AND）	a && b	[a と b の両方が true の場合に true]
||	論理和（OR）	a || b	[a または b が true の場合に true]
!	否定（NOT）	!a	[a が false の場合に true]

boolean a = true;
boolean b = false;
boolean c;

c = a && true;   // c = true
c = a && false;  // c = false
c = b || true;   // c = true
c = b || false;  // c = false
c = !a;          // c = false
c = !b;          // c = true


オブジェクト指向
例：車

メソッド・・・機能（何ができるか）動作
加速する、減速する、クラクションを鳴らす・・・・

フィールド（変数）・・・属性（どんなものか）
車種名、オーナー、塗装・・・・

インスタンス化
クラス（設計図）からインスタンス（実体）を作るイメージ


